Automatically generated by Mendeley Desktop 1.17.13
Any changes to this file will be lost if it is regenerated by Mendeley.

BibTeX export options can be customized via Options -> BibTeX in Mendeley Desktop

@article{Chae2017,
abstract = {Neighborhood models (NBMs) are the methods widely used for collaborative filtering in recommender systems. Given a target user and a target item, NBMs find k most similar users or items (i.e., k-nearest neighbors) and make a prediction of a target user on an item based on the rating patterns of those neighbors on the item. In NBMs, however, we have a difficulty in satisfying both the performance and accuracy together. In order to pursue an accurate recommendation, NBMs may find the k-nearest neighbors at every recommendation request to exploit the latest ratings, which requires a huge amount of computation time. Alternatively, NBMs may search for the k-nearest neighbors offline, which consequently results in inaccurate recommendation as time goes by, or even may not able to deal with new users or new items, because they cannot exploit the latest ratings generated after the k-nearest neighbors are determined. In this paper, we propose a novel approach that finds the k-nearest neighbors efficiently by identifying only those users and items necessary in computing the similarity. The proposed approach enables NBMs not to require any offline similarity computations but to exploit the latest ratings, thereby resolving speed-accuracy tradeoff successfully. We demonstrate the effectiveness of the proposed approach through extensive experiments.},
author = {Chae, Dong Kyu and Lee, Sang Chul and Lee, Si Yong and Kim, Sang Wook},
doi = {10.1016/j.neucom.2017.06.081},
file = {:C$\backslash$:/Users/ikke{\_}/Documents/Studie/2017-2018-MScOperationalResearch-UniversityOfEdingburgh/OneDrive voor Bedrijven/DME-sem2/Bag-of-recipes/literature/ChaeEtAl{\_}2018{\_}OnIdentifyingKNNCollaborativeFiltering.pdf:pdf},
issn = {18728286},
journal = {Neurocomputing},
keywords = {Collaborative filtering,Efficiency,Recommender system},
pages = {134--143},
publisher = {Elsevier B.V.},
title = {{On identifying k-nearest neighbors in neighborhood models for efficient and effective collaborative filtering}},
url = {https://doi.org/10.1016/j.neucom.2017.06.081},
volume = {278},
year = {2017}
}
@article{Verstrepen2017,
abstract = {Traditional collaborative filtering assumes the availability of explicit ratings of users for items. However, in many cases these ratings are not available and only binary, positive-only data is available. Binary, positive-only data is typically as-sociated with implicit feedback such as items bought, videos watched, ads clicked on, etc. However, it can also be the re-sults of explicit feedback such as likes on social networking sites. Because binary, positive-only data contains no neg-ative information, it needs to be treated differently than rating data. As a result of the growing relevance of this problem setting, the number of publications in this field in-creases rapidly. In this survey, we provide an overview of the existing work from an innovative perspective that allows us to emphasize surprising commonalities and key differences.},
author = {Verstrepen, Koen and Bhaduriy, Kanishka and Cule, Boris and Goethals, Bart},
doi = {10.1145/3137597.3137599},
file = {:C$\backslash$:/Users/ikke{\_}/Documents/Studie/2017-2018-MScOperationalResearch-UniversityOfEdingburgh/OneDrive voor Bedrijven/DME-sem2/Bag-of-recipes/literature/VerstrepenEtAl{\_}2017{\_}CollaborativeFilteringForBinaryPositiveOnlyData.pdf:pdf},
isbn = {9789089941268},
issn = {19310145},
journal = {ACM SIGKDD Explorations Newsletter},
number = {1},
pages = {1--21},
title = {{Collaborative Filtering for Binary, Positiveonly Data}},
url = {http://dl.acm.org/citation.cfm?doid=3137597.3137599},
volume = {19},
year = {2017}
}
@inproceedings{Freyne2010,
author = {Freyne, Jill and Berkovsky, Shlomo},
booktitle = {IUI '10 Proceedings of the 15th international conference on Intelligent user interfaces},
file = {:C$\backslash$:/Users/ikke{\_}/Documents/Studie/2017-2018-MScOperationalResearch-UniversityOfEdingburgh/OneDrive voor Bedrijven/DME-sem2/Bag-of-recipes/literature/FreyneBerkovsky{\_}IntelligentFoodPlanningPersonalizedRecipeRecommendation.pdf:pdf},
isbn = {9781605585154},
keywords = {collaborative filtering,food,personalization,recipe,recommender systems},
pages = {321--324},
title = {{Intelligent Food Planning: Personalized Recipe Recommendation}},
year = {2010}
}
@article{DeClercq2016,
abstract = {Background: Completing recipes is a non-trivial task, as the success of ingredient combinations depends on a multitude of factors such as taste, smell and texture. Scope and approach: In this article, we illustrate that machine learning methods can be applied for this purpose. Non-negative matrix factorization and two-step regularized least squares are presented as two alternative methods and their ability to build models to complete recipes is evaluated. The former method exploits information captured in existing recipes to complete a recipe, while the latter one is able to also incorporate information on flavor profiles of ingredients. The performance of the resulting models is evaluated on real-life data. Key findings and conclusions: The two machine learning methods can be used to build models to complete a recipe. Both models are able to retrieve an eliminated ingredient from a recipe and the two-step RLS model is also capable of completing an ingredient set to create a complete recipe. By applying machine learning methods on existing recipes, it is not necessary to model the complexity of good ingredient combinations to be able to complete a recipe.},
author = {{De Clercq}, Marlies and Stock, Michiel and {De Baets}, Bernard and Waegeman, Willem},
doi = {10.1016/j.tifs.2015.11.010},
file = {:C$\backslash$:/Users/ikke{\_}/Documents/Studie/2017-2018-MScOperationalResearch-UniversityOfEdingburgh/OneDrive voor Bedrijven/DME-sem2/Bag-of-recipes/literature/DeClercqEtAl{\_}DataDrivenRecipeCompletionUsingMachineLearningMethods.pdf:pdf},
isbn = {1520-6890 (Electronic)$\backslash$r0009-2665 (Linking)},
issn = {09242244},
journal = {Trends in Food Science and Technology},
keywords = {Ingredient combinations,Non-negative matrix factorization,Recipe completion,Recommender systems,Two-step regularized least squares},
pages = {1--13},
pmid = {23531120},
publisher = {Elsevier Ltd},
title = {{Data-driven recipe completion using machine learning methods}},
url = {http://dx.doi.org/10.1016/j.tifs.2015.11.010},
volume = {49},
year = {2016}
}
@article{Linden2003,
abstract = { Recommendation algorithms are best known for their use on e-commerce Web sites, where they use input about a customer's interests to generate a list of recommended items. Many applications use only the items that customers purchase and explicitly rate to represent their interests, but they can also use other attributes, including items viewed, demographic data, subject interests, and favorite artists. At Amazon.com, we use recommendation algorithms to personalize the online store for each customer. The store radically changes based on customer interests, showing programming titles to a software engineer and baby toys to a new mother. There are three common approaches to solving the recommendation problem: traditional collaborative filtering, cluster models, and search-based methods. Here, we compare these methods with our algorithm, which we call item-to-item collaborative filtering. Unlike traditional collaborative filtering, our algorithm's online computation scales independently of the number of customers and number of items in the product catalog. Our algorithm produces recommendations in real-time, scales to massive data sets, and generates high quality recommendations.},
archivePrefix = {arXiv},
arxivId = {69},
author = {Linden, Greg and Smith, Brent and York, Jeremy},
doi = {10.1109/MIC.2003.1167344},
eprint = {69},
file = {:C$\backslash$:/Users/ikke{\_}/Documents/Studie/2017-2018-MScOperationalResearch-UniversityOfEdingburgh/OneDrive voor Bedrijven/DME-sem2/Bag-of-recipes/literature/LindenEtAl{\_}2003{\_}AmazonRecommendationsItemToItemCollaborativeFiltering.pdf:pdf},
isbn = {1089-7801},
issn = {10897801},
journal = {IEEE Internet Computing},
number = {1},
pages = {76--80},
title = {{Amazon.com recommendations: Item-to-item collaborative filtering}},
volume = {7},
year = {2003}
}
@inproceedings{Forbes2011,
abstract = {The Netflix prize has rejuvenated a widespread interest in the matrix factorization approach for collaborative filtering. We describe a simple algorithm for incorporating content information directly into this approach. We present experi- mental evidence using recipe data to show that this not only improves recommendation accuracy but also provides useful insights about the contents themselves that are otherwise unavailable},
author = {Forbes, Peter and Zhu, Mu},
booktitle = {Proceedings of the fifth ACM conference on Recommender systems - RecSys '11},
doi = {10.1145/2043932.2043979},
file = {:C$\backslash$:/Users/ikke{\_}/Documents/Studie/2017-2018-MScOperationalResearch-UniversityOfEdingburgh/OneDrive voor Bedrijven/DME-sem2/Bag-of-recipes/literature/ForbesZhu{\_}ContentBoostedMatrixFactorizationForRecommenderSystemsExperimentsWithRecipeRecommendation.pdf:pdf},
isbn = {9781450306836},
pages = {261},
title = {{Content-boosted matrix factorization for recommender systems}},
url = {http://dl.acm.org/citation.cfm?doid=2043932.2043979},
year = {2011}
}
@inproceedings{Ning2011,
abstract = {This paper focuses on developing effective and efficient algorithms for top-N recommender systems. A novel Sparse Linear Method (SLIM) is proposed, which generates top-N recommendations by aggregating from user purchase/rating profiles. A sparse aggregation coefficient matrix W is learned from SLIM by solving an `1-norm and `2-norm regularized optimization problem. W is demonstrated to produce high quality recommendations and its sparsity allows SLIM to generate recommendations very fast. A comprehensive set of experiments is conducted by comparing the SLIM method and other state-of-the-art top-N recommendation methods. The experiments show that SLIM achieves significant improvements both in run time performance and recommendation quality over the best existing methods.},
archivePrefix = {arXiv},
arxivId = {0803.0476},
author = {Ning, Xia and Karypis, George},
booktitle = {Proceedings - IEEE International Conference on Data Mining, ICDM},
doi = {10.1109/ICDM.2011.134},
eprint = {0803.0476},
file = {:C$\backslash$:/Users/ikke{\_}/Documents/Studie/2017-2018-MScOperationalResearch-UniversityOfEdingburgh/OneDrive voor Bedrijven/DME-sem2/Bag-of-recipes/literature/NingKarypis{\_}2011{\_}SparseLinearMethodsForTopNRecommenderSystems.pdf:pdf},
isbn = {9780769544083},
issn = {15504786},
keywords = {??? 1-norm regularization,Sparse LInear Methods,Top-N recommender systems},
pages = {497--506},
pmid = {260529900010},
title = {{SLIM: Sparse LInear Methods for top-N recommender systems}},
year = {2011}
}
@inproceedings{Aiolli2013,
abstract = {We present a simple and scalable algorithm for top-N recommendation able to deal with very large datasets and (binary rated) im- plicit feedback. We focus on memory-based collaborative filtering algorithms similar to the well known neighboor based technique for explicit feedback. The major difference, that makes the algo- rithm particularly scalable, is that it uses positive feedback only and no explicit computation of the complete (user-by-user or item- by-item) similarity matrix needs to be performed. The study of the proposed algorithm has been conducted on data from the Million Songs Dataset (MSD) challenge whose task was to suggest a set of songs (out of more than 380k available songs) to more than 100k users given half of the user listening history and complete listening history of other 1 million people. In particular, we investigate on the entire recommendation pipeline, starting from the definition of suitable similarity and scoring func- tions and suggestions on how to aggregate multiple ranking strate- gies to define the overall recommendation. The technique we are proposing extends and improves the one that already won the MSD challenge last year},
author = {Aiolli, Fabio},
booktitle = {Proceedings of the 7th ACM conference on Recommender systems - RecSys '13},
doi = {10.1145/2507157.2507189},
file = {:C$\backslash$:/Users/ikke{\_}/Documents/Studie/2017-2018-MScOperationalResearch-UniversityOfEdingburgh/OneDrive voor Bedrijven/DME-sem2/Bag-of-recipes/literature/Aoilli{\_}2013{\_}EfficientTopNRecommendationForVeryLargeScaleBinaryRatedDatasets.pdf:pdf},
isbn = {9781450324090},
keywords = {back,collaborative filtering,implicit feed-,million song dataset challenge,top-n recommendation},
pages = {273--280},
title = {{Efficient top-n recommendation for very large scale binary rated datasets}},
url = {http://dl.acm.org/citation.cfm?doid=2507157.2507189},
year = {2013}
}
@phdthesis{DeClercq2014,
abstract = {The aim of our work is to build a model that suggests one or more ingredients to a given number of ingredients. The idea is based on leftover ingredients in a fridge. A person could list the available ingredients in his or her fridge and the model would predict which ingredients can be combined with the remaining ingredients.},
author = {{De Clercq}, Marlies},
file = {:C$\backslash$:/Users/ikke{\_}/Documents/Studie/2017-2018-MScOperationalResearch-UniversityOfEdingburgh/OneDrive voor Bedrijven/DME-sem2/Bag-of-recipes/literature/DeClercq{\_}PredictionsOfIngredientCombinationsUsingMachineLearningTechniques (thesis).pdf:pdf},
title = {{Prediction of Ingredient Combinations using Machine Learning Techniques}},
year = {2014}
}
@inproceedings{Sarwar2001,
abstract = {Note: OCR errors may be found in this Reference List extracted from the full text article. ACM has opted to expose the complete List rather than only correct and linked references.},
archivePrefix = {arXiv},
arxivId = {119},
author = {Sarwar, Badrul and Karypis, George and Konstan, Joseph and Reidl, John},
booktitle = {Proceedings of the tenth international conference on World Wide Web - WWW '01},
doi = {10.1145/371920.372071},
eprint = {119},
file = {:C$\backslash$:/Users/ikke{\_}/Documents/Studie/2017-2018-MScOperationalResearch-UniversityOfEdingburgh/OneDrive voor Bedrijven/DME-sem2/Bag-of-recipes/literature/SarwarEtAl{\_}2001{\_}ItemBasedCollaborativeFilteringRecommendationAlgorithms.pdf:pdf},
isbn = {1581133480},
issn = {09501991},
pages = {285--295},
pmid = {11262239},
title = {{Item-based collaborative filtering recommendation algorithms}},
url = {http://portal.acm.org/citation.cfm?doid=371920.372071},
year = {2001}
}
